{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { authContext } from \"../context/AuthContext\";\nexport const useLogin = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(null);\n  const [error, setError] = useState(null);\n  const {\n    dispatch\n  } = useContext(authContext);\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to localStorage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"OvUN3S5ioyQt/Kc00JNEqqAJgcg=\");","map":{"version":3,"names":["useState","useContext","authContext","useLogin","_s","isLoading","setIsLoading","error","setError","dispatch","login","email","password","response","fetch","method","body","JSON","stringify","headers","json","ok","localStorage","setItem","type","payload"],"sources":["D:/Mujmondo/work/Mern/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { authContext } from \"../context/AuthContext\";\r\n\r\nexport const useLogin = () => {\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const {dispatch} = useContext(authContext)\r\n    const login = async (email, password) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('/api/user/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({email, password}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){\r\n            // save the user to localStorage\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            // update the auth context\r\n            dispatch({type: 'LOGIN', payload: json})\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n    return  { login, isLoading, error }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAACS;EAAQ,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAC1C,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrCN,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP,KAAK;QAAEC;MAAQ,CAAC,CAAC;MACvCO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZf,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;IACxB;IACA,IAAGM,QAAQ,CAACQ,EAAE,EAAC;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MAExCd,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD,OAAQ;IAAEI,KAAK;IAAEL,SAAS;IAAEE;EAAM,CAAC;AACvC,CAAC;AAAAH,EAAA,CAhCYD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}